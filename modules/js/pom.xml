<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2019 European Commission

    Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
    You may not use this work except in compliance with the Licence.
    You may obtain a copy of the Licence at:

        https://joinup.ec.europa.eu/software/page/eupl

    Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the Licence for the specific language governing permissions and limitations under the Licence.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europa.ec.digit.leos.pilot</groupId>
        <artifactId>leos-modules</artifactId>
        <version>3.0.0</version>
    </parent>

    <artifactId>leos-js</artifactId>
    <packaging>jar</packaging>

    <name>JS</name>

    <description>LEOS Pilot JavaScript Module</description>

    <properties>
        <project.final.name>leos-js</project.final.name>
        <resourcesOutputDirectory>META-INF/resources</resourcesOutputDirectory>
        <testResourcesOutputDirectory>META-INF/resources</testResourcesOutputDirectory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>MathJax</artifactId>
            <version>${mathjax.version}</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <!-- RESOURCES -->
            <!-- this project does NOT follow the standard directory layout of maven -->
            <!-- we configure custom resource directories instead of using the default one -->
            <!-- we optimize the build by configuring also custom resource output directories -->
            <!-- we choose to explicitly define three resource directories: js, lib and assets -->
            <resource>
                <directory>src/main/js</directory>
                <targetPath>${resourcesOutputDirectory}/js</targetPath>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/lib</directory>
                <targetPath>${resourcesOutputDirectory}/lib</targetPath>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/assets</directory>
                <targetPath>${resourcesOutputDirectory}/assets</targetPath>
                <filtering>false</filtering>
            </resource>
        </resources>
        <testResources>
            <!-- TEST RESOURCES -->
            <!-- this project does NOT follow the standard directory layout of maven -->
            <!-- we configure custom test resource directories instead of using the default one -->
            <!-- we optimize the build by configuring also custom test resource output directories -->
            <!-- we choose to explicitly define three test resource directories: js, lib and assets -->
            <testResource>
                <directory>src/test/js</directory>
                <targetPath>${testResourcesOutputDirectory}/js</targetPath>
                <filtering>false</filtering>
            </testResource>
            <testResource>
                <directory>src/test/lib</directory>
                <targetPath>${testResourcesOutputDirectory}/lib</targetPath>
                <filtering>false</filtering>
            </testResource>
            <testResource>
                <directory>src/test/assets</directory>
                <targetPath>${testResourcesOutputDirectory}/assets</targetPath>
                <filtering>false</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <!-- MAVEN COMPILER -->
                <!-- this is NOT a Java project, so there are no Java sources to be compiled -->
                <!-- we optimize the build by removing the default maven compiler bindings -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- JSHint -->
                <!-- JavaScript code quality tool that helps to detect errors and potential problems -->
                <groupId>com.cj.jshintmojo</groupId>
                <artifactId>jshint-maven-plugin</artifactId>
                <configuration>
                    <configFile>src/etc/linters/jshintConfig.json</configFile>
                    <directories>
                        <directory>src/main/js</directory>
                    </directories>
                </configuration>
            </plugin>
            <plugin>
                <!-- JASMINE -->
                <!-- JavaScript Behavior Driven Development testing framework -->
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <configuration>
                    <specRunnerTemplate>REQUIRE_JS</specRunnerTemplate>
                    <customRunnerConfiguration>src/etc/jasmine/specRunner.config</customRunnerConfiguration>
                    <jsSrcDir>src/main/js</jsSrcDir>
                    <srcDirectoryName>js</srcDirectoryName>
                    <jsTestSrcDir>src/test/js</jsTestSrcDir>
                    <specDirectoryName>spec</specDirectoryName>
                    <additionalContexts>
                        <context>
                            <contextRoot>/lib</contextRoot>
                            <directory>src/main/lib</directory>
                        </context>
                    </additionalContexts>
                    <preloadSources>
                        <source>lib/requirejs_2.3.3/require.js</source>
                        <source>js/leosModulesBootstrap.js</source>
                    </preloadSources>
                </configuration>
            </plugin>
            <plugin>
                <!-- JETTY -->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <scanIntervalSeconds>5</scanIntervalSeconds>
                    <webAppSourceDirectory>src/main</webAppSourceDirectory>
                    <webApp>
                        <contextPath>/dev</contextPath>
                        <resourceBases>
                            <resourceBase>src/main</resourceBase>
                            <resourceBase>src/test</resourceBase>
                        </resourceBases>
                        <overrideDescriptor>src/etc/jetty/web.xml</overrideDescriptor>
                    </webApp>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
